name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: SKIRT9
      cmakeInstallationPath: SKIRT9-installation
      tagName: edb826e2bb49fde905e9bb0fc1d78372035fefaa
      mingwTargetZip: SKIRT9-${{ github.ref_name }}-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: git clone
        shell: cmd
        run: git clone --recursive https://github.com/SKIRT/SKIRT9.git && cd SKIRT9 && git checkout ${{ env.tagName }}
        
      - name: curl winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip
        shell: cmd
        run: |
          curl https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip -L --output winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip && dir && 7z.exe x winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip
        
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
      
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
        
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;^
            gcc --version &&^
            cd SKIRT9 &&^
            ${{ github.workspace }}\PortableGit\usr\bin\sed.exe '/^anothervalue=.*/a after=me' SKIRT\main\CMakeLists.txt
            cmake.exe -G "MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS} -static" ^
            -DCMAKE_CXX_FLAGS="-D_WIN64=1 -DWIN64=1" ^
            -DBUILD_DOX_STYLE=OFF ^
            -DBUILD_MAKE_UP=OFF ^
            -DBUILD_SHARED_LIBS=OFF ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && cmake --install . 
            
      - name: copy exe
        shell: cmd
        run: |
          cd /d "${{ github.workspace }}\SKIRT9\cmake-build\SKIRT\main" &&^
          mkdir "export" &&^
          xcopy /H /Y /C "skirt.exe" "export"
      
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "SKIRT9/cmake-build/SKIRT/main/export"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "SKIRT9/cmake-build/SKIRT/main/export/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
